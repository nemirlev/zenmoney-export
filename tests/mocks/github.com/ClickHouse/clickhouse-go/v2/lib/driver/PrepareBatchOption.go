// Code generated by mockery v2.43.1. DO NOT EDIT.

package driver

import (
	driver "github.com/ClickHouse/clickhouse-go/v2/lib/driver"
	mock "github.com/stretchr/testify/mock"
)

// PrepareBatchOption is an autogenerated mock type for the PrepareBatchOption type
type PrepareBatchOption struct {
	mock.Mock
}

type PrepareBatchOption_Expecter struct {
	mock *mock.Mock
}

func (_m *PrepareBatchOption) EXPECT() *PrepareBatchOption_Expecter {
	return &PrepareBatchOption_Expecter{mock: &_m.Mock}
}

// Execute provides a mock function with given fields: options
func (_m *PrepareBatchOption) Execute(options *driver.PrepareBatchOptions) {
	_m.Called(options)
}

// PrepareBatchOption_Execute_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Execute'
type PrepareBatchOption_Execute_Call struct {
	*mock.Call
}

// Execute is a helper method to define mock.On call
//   - options *driver.PrepareBatchOptions
func (_e *PrepareBatchOption_Expecter) Execute(options interface{}) *PrepareBatchOption_Execute_Call {
	return &PrepareBatchOption_Execute_Call{Call: _e.mock.On("Execute", options)}
}

func (_c *PrepareBatchOption_Execute_Call) Run(run func(options *driver.PrepareBatchOptions)) *PrepareBatchOption_Execute_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*driver.PrepareBatchOptions))
	})
	return _c
}

func (_c *PrepareBatchOption_Execute_Call) Return() *PrepareBatchOption_Execute_Call {
	_c.Call.Return()
	return _c
}

func (_c *PrepareBatchOption_Execute_Call) RunAndReturn(run func(*driver.PrepareBatchOptions)) *PrepareBatchOption_Execute_Call {
	_c.Call.Return(run)
	return _c
}

// NewPrepareBatchOption creates a new instance of PrepareBatchOption. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewPrepareBatchOption(t interface {
	mock.TestingT
	Cleanup(func())
}) *PrepareBatchOption {
	mock := &PrepareBatchOption{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
